generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(32)
  password  String?  @db.Char(64)
  nickname  String   @unique @db.VarChar(16)
  role      Int      @default(0)
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  deleted   Boolean  @default(false)
}

model Oauth {
  id      Int    @id @default(autoincrement())
  oauthId String @unique @db.Char(64)
  social  String @db.Char(8)
  userId  Int    @unique
}

model Writer {
  id              Int      @id @default(autoincrement())
  userId          Int      @unique
  moonjinId       String   @unique @db.VarChar(32)
  description     String   @default("") @db.VarChar(256)
  newsletterCount Int      @default(0)
  seriesCount     Int      @default(0)
  followerCount   Int      @default(0)
  status          Boolean  @default(true)
  createdAt       DateTime @default(now())
  deleted         Boolean  @default(false)
}

model Follow {
  id         Int      @id @default(autoincrement())
  followerId Int
  writerId   Int
  createdAt  DateTime @default(now())
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(32)
  content    String    @db.Text
  writerId   Int
  category   String    @db.Char(16)
  cover      String?   @db.VarChar(128)
  seriesId   Int       @default(0)
  status     Boolean   @default(true)
  createdAt  DateTime  @default(now())
  releasedAt DateTime?
  deleted    Boolean   @default(false)
}

model Newsletter {
  id         Int      @id @default(autoincrement())
  postId     Int
  receiverId Int
  sentAt     DateTime @default(now())
}

model Series {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(32)
  description String?  @db.VarChar(256)
  writerId    Int
  category    String   @db.Char(16)
  cover       String?  @db.VarChar(128)
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  deleted     Boolean  @default(false)
}
