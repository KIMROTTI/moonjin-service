"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkEmailExist = void 0;
const PlainFetcher_1 = require("@nestia/fetcher/lib/PlainFetcher");
/**
 *
 * @summary 메일 중복 확인
 * @param payload 이메일이 담긴 객체
 * @returns "해당 메일을 사용하실 수 있습니다."
 * @throws EMAIL_ALREADY_EXIST
 *
 * @controller UserController.checkEmailExist
 * @path POST /user/email/uniqueness
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function checkEmailExist(connection, payload) {
    return PlainFetcher_1.PlainFetcher.fetch({
        ...connection,
        headers: {
            ...(connection.headers ?? {}),
            "Content-Type": "application/json",
        },
    }, {
        ...checkEmailExist.METADATA,
        path: checkEmailExist.path(),
    }, payload);
}
exports.checkEmailExist = checkEmailExist;
(function (checkEmailExist) {
    checkEmailExist.METADATA = {
        method: "POST",
        path: "/user/email/uniqueness",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    };
    checkEmailExist.path = () => {
        return `/user/email/uniqueness`;
    };
})(checkEmailExist || (exports.checkEmailExist = checkEmailExist = {}));
