/**
 * @packageDocumentation
 * @module api.functional.user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection, Primitive } from "@nestia/fetcher";
import type { ILocalSignUp } from "../../structures/ILocalSignUp";
import type { TryCatchUserDtoMAIL_ALREADY_EXISTNICKNAME_ALREADY_EXISTSIGNUP_ERROR } from "../../structures/TryCatchUserDtoMAIL_ALREADY_EXISTNICKNAME_ALREADY_EXISTSIGNUP_ERROR";
/**
 * @controller UserController.localSignUp
 * @path POST /user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function localSignUp(connection: IConnection, signUpData: localSignUp.Input): Promise<localSignUp.Output>;
export declare namespace localSignUp {
    type Input = Primitive<ILocalSignUp>;
    type Output = Primitive<TryCatchUserDtoMAIL_ALREADY_EXISTNICKNAME_ALREADY_EXISTSIGNUP_ERROR>;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/user";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: null;
    };
    const path: () => string;
}
