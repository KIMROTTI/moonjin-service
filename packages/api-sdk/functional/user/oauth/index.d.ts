/**
 * @packageDocumentation
 * @module api.functional.user.oauth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection, Primitive, Resolved } from "@nestia/fetcher";
import type { ISocialLogin } from "../../../structures/ISocialLogin";
import type { TryCatchResponseMessageSOCIAL_LOGIN_ERROR } from "../../../structures/TryCatchResponseMessageSOCIAL_LOGIN_ERROR";
export * as url from "./url";
/**
 * @controller UserController.socialLogin
 * @path GET /user/oauth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function socialLogin(connection: IConnection, socialLoginData: socialLogin.Query): Promise<socialLogin.Output>;
export declare namespace socialLogin {
    type Query = Resolved<ISocialLogin>;
    type Output = Primitive<TryCatchResponseMessageSOCIAL_LOGIN_ERROR>;
    const METADATA: {
        readonly method: "GET";
        readonly path: "/user/oauth";
        readonly request: null;
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: null;
    };
    const path: (socialLoginData: socialLogin.Query) => string;
}
