"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.localSignUp = exports.oauth = exports.auth = exports.email = void 0;
const PlainFetcher_1 = require("@nestia/fetcher/lib/PlainFetcher");
exports.email = __importStar(require("./email"));
exports.auth = __importStar(require("./auth"));
exports.oauth = __importStar(require("./oauth"));
/**
 *
 * @summary 로걸 회원가입 기능
 * @param localSignUpData 회원가입 정보
 * @returns "메일이 전송되었습니다."
 * @throws EMAIL_ALREADY_EXIST
 * @throws NICKNAME_ALREADY_EXIST
 * @throws MOONJIN_EMAIL_ALREADY_EXIST
 * @throws SIGNUP_ERROR
 * @throws WRITER_SIGNUP_ERROR
 * @throws EMAIL_NOT_EXIST
 *
 * @controller UserController.localSignUp
 * @path POST /user
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function localSignUp(connection, localSignUpData) {
    return PlainFetcher_1.PlainFetcher.fetch({
        ...connection,
        headers: {
            ...(connection.headers ?? {}),
            "Content-Type": "application/json",
        },
    }, {
        ...localSignUp.METADATA,
        path: localSignUp.path(),
    }, localSignUpData);
}
exports.localSignUp = localSignUp;
(function (localSignUp) {
    localSignUp.METADATA = {
        method: "POST",
        path: "/user",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    };
    localSignUp.path = () => {
        return `/user`;
    };
})(localSignUp || (exports.localSignUp = localSignUp = {}));
