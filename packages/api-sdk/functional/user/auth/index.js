"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.localLogin = void 0;
const PlainFetcher_1 = require("@nestia/fetcher/lib/PlainFetcher");
/**
 *
 * @summary 로그인 기능
 * @param localLoginData 로그인 정보
 * @returns "로그인이 완료되었습니다"
 * @throws LOGIN_ERROR
 * @throws INVALID_PASSWORD
 * @throws USER_NOT_FOUND
 * @throws SOCIAL_USER_ERROR
 * @throws EMAIL_NOT_VERIFIED
 *
 * @controller UserController.localLogin
 * @path POST /user/auth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
async function localLogin(connection, localLoginData) {
    return PlainFetcher_1.PlainFetcher.fetch({
        ...connection,
        headers: {
            ...(connection.headers ?? {}),
            "Content-Type": "application/json",
        },
    }, {
        ...localLogin.METADATA,
        path: localLogin.path(),
    }, localLoginData);
}
exports.localLogin = localLogin;
(function (localLogin) {
    localLogin.METADATA = {
        method: "POST",
        path: "/user/auth",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    };
    localLogin.path = () => {
        return `/user/auth`;
    };
})(localLogin || (exports.localLogin = localLogin = {}));
