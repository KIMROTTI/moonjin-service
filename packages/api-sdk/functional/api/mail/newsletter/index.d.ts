/**
 * @packageDocumentation
 * @module api.functional.api.mail.newsletter
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection, Primitive } from "@nestia/fetcher";
import type { newsLetterValidationDto } from "../../../../structures/newsLetterValidationDto";
/**
 * @controller MailController.sendNewsLetter
 * @path POST /api/mail/newsletter
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function sendNewsLetter(connection: IConnection, emailInfo: sendNewsLetter.Input): Promise<sendNewsLetter.Output>;
export declare namespace sendNewsLetter {
    type Input = Primitive<newsLetterValidationDto>;
    type Output = Primitive<string>;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/api/mail/newsletter";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: null;
    };
    const path: () => string;
}
